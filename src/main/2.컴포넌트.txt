[컴포넌트]
1.컴포넌트는 UI를 구성하는 독립적인 재상용 가능한 작은단위
2.HTML + CSS + JS 를 하나의 파일로 관리가 가능하여 유지보수 쉽다.


[JSX]
1.JS 코드 안에서 HTML 과 비슷한 문법을 사용할 수 있도록 만든 확장 문법
2.브라우저가 직접 JSX를 이해하지 못하므로 리액트가 렌더링이 필요함
3.특징
    1.jsx는 HTML 처럼 보이지만 HTML과 다름
    (1)카멜표기법 필수사용
    (2)마크업 close</>꼭사용

    2.JSX는 반드시 상위 요소가 필수
    (1)return <div>내용물</div>
    (2)return<>내용물</>
    3.jsx는 두줄 이상의 문법 작성할때는 ( ) 소괄호 감쌈
     return(
        <div>
            내용물
        </div>
     )
    4.jsx는 문법에서 js 표현식 가능{ } 표현식 가능하지만 선인식 불가능
    return

    5.jsx는 주석처리
    (/*주석처리*/)

    6.jsx에서 css 사용법
    import '경로/파일명.css'
    class 속성명 대신에 className 속성명 사용
    *인라인형식의 CSS는 카멜표기법

    4.jsx생성하는 방법
        (1)파일의 확장자를 .jsx로 생성
        (2)함수 하나 생성한다 .props 매개변수 필수로 넣어준다
            function 함수명(props){}
        (3)함수 안에서 return 뒤로 jsx 문법 작성
        (4) .jsx 파일 내 기본적으로 import 반환할 컴포넌트 함수 선언.
            export default function 함수명(props){}

        (5).컴포넌트 매개변수 props
            1.부모 컴포넌트로부터 자식 컴포넌트에게 데이터 전달 방법.
            2.자식은 전달받은 props를 읽기모드로 사용 가능.( 수정금지 )
            3.사용법
                function 부모컴포넌트(props){
                    return(<><자식컴포넌트 속성명={값}속성명={값}/></>)
                }

                function 자식컴포넌트(props){

                }
    
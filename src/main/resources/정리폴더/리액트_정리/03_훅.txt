※ 리액트에서 훅(Hook)은 핵심

DOM : document object model
    - HTML문서의 구조를 표현하는 객체
        - Element : HTML의 마크업들 (<div>, <input>, <p> 등등)
        - Text : HTML마크업 내 내용 (<div>Text</div>)
        - Attribute : HTML마크업의 속성 (class, id, name, href, src 등등)

가상 DOM(Virtual DOM)
    - 실제 DOM을 직접 수정하지 않고 가상 DOM을 생성하여 실제 DOM과 비교하여 필요한 부분만 업데이트/수정
        - Element : 컴포넌트
        - Text
        - Attribute : props

    - HTML마크업을 직접 만들어서 가상 DOM으로 활용
        - <div>는 HTML회사에서 만들어서 제공
        - <productCard> : 리액트로 컴포넌트를 만들어서 사용

    - 장점 : 부분적 렌더링에 따른 빠르고 효율적인 최적화 
    - 단점 : 최초 렌더링이 오래 걸림(데이터를 한번에 가져오기 때문)

[생명주기]
    01. 컴포넌트가 생성되는 시점부터 사라지는 시점까지의 주기
    02. 시점
        02-1. 마운트(출생) : mount
            - render() : main.jsx에 존재하는 컴포넌트를 그려주는 함수 --> 실행되면 마운트
                - 상위컴포넌트가 return할때 하위 컴포넌트도 같이 return되므로 하위컴포넌트들도 마운트(출생)한다
            - 컴포넌트가 출생할 때 1번 실행되는 함수 : useEffect(() => {}, [])
                - RestAPI --> fetch, axios를 사용할 때 많이 사용됨

        02-2. 업데이트(인생) : update
            - setState(), props가 변경, redux
                - 컴포넌트가 리렌더링 될때
                - 리렌더링 == 화면새로고침 == 컴포넌트재호출 == 함수재호출
            - 컴포넌트가 업데이트 될때 마다 실행되는 함수 : useEffect(() => {}, [의존성])
                - 의존성 : 누가 업데이트 되었을때 실행할지 state 변수명을 넣어주면 된다

        02-3. 언마운트(사망) : unmount
            - 클라이언트(사용자)가 보는 화면에서 사라질 때 실행(자동)
                - 예시 : 다른 홈페이지로 location.href했을 때 실행 됨
            - 컴포넌트가 제거/사망 될때 실행되는 함수 : useEffect(() => {return () => {}}, [])
                - return에 컴포넌트가 제거될때 실행할 함수코드를 넣어준다.

[훅]
    01. 정의 : 리액트의 컴포넌트 상태(state)와 생명주기 기능에 갈고리를 걸어(바인딩) 원하는 시점에 정해진 함수를 실행하도록 만드는 라이브러리
    02. 함수의 종류
        02-1. useState
            
        02-2. useEffect

        02-3. useRef




